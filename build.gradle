plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'br.com.rhribeiro25'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring projects
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-devtools'
    // Apache Commons Validator
    implementation 'commons-validator:commons-validator:1.7'
    // Context
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-context-support:4.3.10.RELEASE'
    // Reactor project
    implementation 'io.projectreactor:reactor-tools'
    implementation 'io.projectreactor:reactor-core'
    // Openapi
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.2'
    // Lombok project
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    // JAXB API
    implementation('javax.xml.bind:jaxb-api:2.3.0')
    implementation('javax.activation:activation:1.1')
    implementation('org.glassfish.jaxb:jaxb-runtime:2.3.0')
    // Test dependencies
    implementation platform('io.projectreactor:reactor-bom:2020.0.2')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'io.projectreactor.tools:blockhound:1.0.4.RELEASE'
    testImplementation 'net.jodah:concurrentunit:0.4.0'
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.mock-server:mockserver-netty:5.11.2"
    testImplementation "org.mock-server:mockserver-spring-test-listener:5.11.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

}

check.dependsOn jacocoTestCoverageVerification

jacoco {
    toolVersion = '0.8.6'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }
            element = 'CLASS'
            excludes = []
        }
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [])
        }))
    }
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    finalizedBy jacocoTestReport
}
